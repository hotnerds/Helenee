plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//gson
	implementation 'com.google.code.gson:gson:2.8.6'

	//oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2',
			// Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
			//'org.bouncycastle:bcprov-jdk15on:1.60',
			'io.jsonwebtoken:jjwt-jackson:0.11.2' // or 'io.jsonwebtoken:jjwt-gson:0.11.2' for gson

	//modelMapper
	implementation 'org.modelmapper:modelmapper:2.3.8'

	//rest-assured
	testImplementation 'io.rest-assured:rest-assured'

	implementation 'junit:junit:4.13.1'
	implementation 'org.jetbrains:annotations:20.1.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'


}

jacoco {
	toolVersion = '0.8.7'
}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled false
	}

	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {

	violationRules {
		rule {
			enabled = true

			element = 'CLASS'

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.00
			}

			limit {
				counter = 'INSTRUCTION'
				value = 'COVEREDRATIO'
				minimum = 0.00
			}

			excludes = [
					"*.dto.*",
					"*.HotnerdsApplication",
					"*.common.*",
					"*.security.*",
					"*.exception.*",
			]
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()

	finalizedBy 'jacocoTestReport'
}
